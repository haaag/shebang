#!/usr/bin/env bash

# ╻ ╻┏━┓╻     ┏━┓┏━┓┏━╸┏┓╻┏━╸┏━┓
# ┃ ┃┣┳┛┃  ╺━╸┃ ┃┣━┛┣╸ ┃┗┫┣╸ ┣┳┛
# ┗━┛╹┗╸┗━╸   ┗━┛╹  ┗━╸╹ ╹┗━╸╹┗╸
# simple script to open urls with different programs

PROG="${0##*/}"
DIR="/tmp/$PROG"
declare -a OPTS=(open copy mpv ytmpv img browsers)

set -eou pipefail

function _notifyme {
    local prog
    local mesg="<b>$1</b>"
    local icon="${2:-dialog-warning}"
    prog=$(echo "$PROG" | tr '[:lower:]' '[:upper:]')
    notify-send -i "$icon" "$prog" "$mesg"
}

function _logerr {
    local msg="$1"
    printf "%s: %s\n" "$PROG" "$msg" >&2
    _notifyme "$msg"
    exit 1
}

function _has {
    local verbose=false
    if [[ $1 == '-v' ]]; then
        verbose=true
        shift
    fi
    for c in "$@"; do
        c="${c%% *}"
        if ! command -v "$c" &>/dev/null; then
            [[ "$verbose" == true ]] && _logerr "'$c' not found"
            return 1
        fi
    done
}

function _cleanup {
    local count
    _has -v find
    count=$(find "$DIR" -maxdepth 1 -type f | wc -l)
    if [[ $count -gt 10 ]]; then
        rm -rf "$DIR"
    fi
}

function _mpv {
    _has -v mpv
    local socket="${MPVSOCKET:-/tmp/mpvsocket}"
    setsid -f mpv --input-ipc-server="$socket" -quiet --loop "$1" >/dev/null 2>&1 &
}

function _open_ytmpv {
    _has -v ytmpv
    local url
    url=$(xclip -selection clipboard -o)
    ytmpv "$url"
}

function _choose_action {
    local arg="$1"
    local _action

    _action=$(printf "%s\n" "${OPTS[@]}" | dmenu -h 20 -i -p "openWith>")
    [[ -z $_action ]] && exit 1

    case "$_action" in
    open) setsid -f xdg-open "$arg" ;;
    browsers) _has -v pybrowsers && setsid -f pybrowsers --verbose --url "$arg" ;;
    copy) _has -v xclip && echo -e "$arg" | xclip -selection clipboard -r ;;
    mpv) _mpv "$arg" & ;;
    ytmpv) _open_ytmpv "$arg" ;;
    img) _has -v tuiropen && tuiropen "$arg" & ;;
    *) exit 1 ;;
    esac

    exit 0
}

function main {
    [[ -z ${1:-} ]] && {
        echo "Usage: $PROG <URL>"
        exit 1
    }

    [[ -d "$DIR" ]] || mkdir -p "$DIR"

    _has -v setsid
    _cleanup

    case "$1" in
    *png | *jpg | *jpe | *jpeg)
        _has -v nsxiv
        curl -sL "$1" >"$DIR/$(echo "$1" | sed "s/.*\///;s/%20/ /g")" && nsxiv -a "$DIR/$(echo "$1" | sed "s/.*\///;s/%20/ /g")" >/dev/null 2>&1 &
        ;;
    *pdf | *cbz | *cbr)
        _has -v zathura
        curl -sL "$1" >"$DIR/$(echo "$1" | sed "s/.*\///;s/%20/ /g")" && zathura "$DIR/$(echo "$1" | sed "s/.*\///;s/%20/ /g")" >/dev/null 2>&1 &
        ;;
    *gifv* | *gif | *mkv | *webm | *mp4 | *odysee.com*)
        _has -v mpv
        setsid -f mpv --really-quiet --loop "$1" >/dev/null 2>&1
        ;;
    *reddit.com/gallery* | *v.redd.it*)
        _has -v tuiropen
        setsid -f tuiropen "$1"
        ;;
    *youtu.be* | *youtube.com/watch* | *youtube.com/playlist* | *youtube.com/shorts*)
        _has -v ytmpv
        setsid -f ytmpv "$1"
        ;;
    *) _choose_action "$1" ;;
    esac

    exit 0
}

main "$@"
