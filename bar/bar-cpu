#!/usr/bin/env bash

# Script for displaying CPU usage
#
# Output: [ICON 10%]

ICON="" # 

function dwm_cpu_old {
    cpu=$(top -bn1 | grep Cpu | awk '{print $2}')
    printf "%s" "${SEP1:-}"
    printf "%s  %s%%" "$ICON" "$cpu"
    printf "%s\n" "${SEP2:-}"
}

function dwm_cpu_color {
    local cyan_color, reset_color
    cyan_color="^c#4abaaf^"
    reset_color="^d^"
    cpu=$(top -bn1 | grep Cpu | awk '{print $2}')
    printf "%s" "$SEP1"
    printf "%s%s%s  %s%%" "$cyan_color" "$ICON" "$reset_color" "$cpu"
    printf "%s\n" "$SEP2"
}

function cpu_no_color {
    read -r cpu a b c previdle rest </proc/stat
    prevtotal=$((a + b + c + previdle))
    sleep 0.5
    read -r cpu a b c idle rest </proc/stat
    total=$((a + b + c + idle))
    cpu=$((100 * ((total - prevtotal) - (idle - previdle)) / (total - prevtotal)))
    echo  "$cpu"%
}

function dwm_cpu {
    read -r cpu a b c previdle rest </proc/stat
    prevtotal=$((a + b + c + previdle))
    sleep 0.5
    read -r cpu a b c idle rest </proc/stat
    total=$((a + b + c + idle))
    cpu=$((100 * ((total - prevtotal) - (idle - previdle)) / (total - prevtotal)))
    printf "%s" "$SEP1"
    printf "%s  %s%%\n" "$ICON" "$cpu"
    printf "%s" "$SEP2"
}

dwm_cpu_old
