#!/usr/bin/env bash

# Script for displaying core temperature in dwm bar.
#
# Output: [icon 55Â°C]

# icons: ï‹‹ ï‹Š ï‹‰ ï‹ˆ ï‹‡
PROG=$(basename "$0")
TARGET="k10temp-pci-00c3"
WARN_ICON="ðŸ”¥"
MAX_TEMP=95
NOTIFYID=888
WARN_NOTIFIED="/tmp/${PROG}-high"

if [[ "${DWM_BAR_FILLED:-1}" -eq 0 ]]; then
    icon_cold="ï‹‹"
    icon_low="ï‹Š"
    icon_mid="ï‹‰"
    icon_high="ï‹ˆ"
    icon_extreme="ï‹‡"
else
    icon_cold="ï‹‹"
    icon_low="ï‹Š"
    icon_mid="ï‹‰"
    icon_high="ï‹ˆ"
    icon_extreme="ï‹‡"
fi

function _notify {
    local msg="$1"
    export DISPLAY=":0"
    declare -a notify_args=(-h string:x-dunst-stack-tag:temppercore)
    notify_args+=(-i "cpu" -u critical)
    notify_args+=(-r "$NOTIFYID")
    notify-send "${notify_args[@]}" "$PROG" "$msg"
}

function _get_icon {
    local temp="$1"
    local icon
    if [[ "${temp}" -ge 20 && "${temp}" -le 40 ]]; then
        icon="$icon_cold"
    elif [[ "${temp}" -ge 41 && "${temp}" -le 50 ]]; then
        icon="$icon_low"
    elif [[ "${temp}" -ge 51 && "${temp}" -le 60 ]]; then
        icon="$icon_mid"
    elif [[ "${temp}" -ge 61 && "${temp}" -le 70 ]]; then
        icon="$icon_high"
    elif [[ "${temp}" -ge 71 && "${temp}" -le 79 ]]; then
        icon="$icon_extreme"
    else
        icon="${WARN_ICON}"
    fi

    echo "${icon}"
}

function _cpu_tempcore {
    local temp_str temp_int icon
    temp_str=$(sensors "${TARGET}" | grep 'Tctl' | awk '{print $2}' | sed s/+//)
    temp_int=${temp_str%.*}
    icon=$(_get_icon "${temp_int}")

    if [[ "$temp_int" -ge "$MAX_TEMP" ]]; then
        _notify "${icon}${temp_str} is too high"
        if [[ ! -e "$WARN_NOTIFIED" ]]; then
            touch "$WARN_NOTIFIED"
        fi
    fi

    printf "%s" "${SEP1:-}"
    printf "%s %s\n" "$icon" "$temp_str"
    printf "%s" "${SEP2:-}"

    if [[ -e "$WARN_NOTIFIED" ]] && [[ "$temp_int" -lt "$MAX_TEMP" ]]; then
        dunstctl close "$NOTIFYID"
        rm "$WARN_NOTIFIED"
    fi
}

_cpu_tempcore
