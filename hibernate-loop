#!/usr/bin/env bash

# ╻ ╻╻┏┓ ┏━╸┏━┓┏┓╻┏━┓╺┳╸┏━╸
# ┣━┫┃┣┻┓┣╸ ┣┳┛┃┗┫┣━┫ ┃ ┣╸
# ╹ ╹╹┗━┛┗━╸╹┗╸╹ ╹╹ ╹ ╹ ┗━╸
# script to hibernate/suspend with `zzz/ZZZ`
#
# this script monitors specific lock files to manage system hibernation and
# suspension.
# it runs continuously in the background, checking for the presence of lock
# files to determine whether to trigger hibernation.
# dependency: 'suspend-hybrid' script

PROG="${0##*/}"
LOGGER="${LOGS_PATH:-$HOME/dcs/log}/suspend-hibernate.log"
DEPS=(zzz ZZZ tee)

# lock files
LOCKS=$HOME
HIBERNATE_LOCK="$LOCKS/hibernate.lock"
WAKEUP_LOCK="$LOCKS/wakeup.lock"
SLEEP=3s

# logs messages with timestamps and script name to the log file.
function _logger {
    local now
    if [[ ! -f "$LOGGER" ]]; then
        touch "$LOGGER"
    fi

    now=$(date '+%F %T')
    echo "[${now}]::[$PROG]::$1" | tee -a "$LOGGER"
}

function _notifyme {
    local prog
    local mesg="<b>$1</b>"
    prog=$(echo "$PROG" | tr '[:lower:]' '[:upper:]')
    notify-send -r 938 -i dialog-warning "$prog" "$mesg"
}

# prints a separator line in the log file.
function _line {
    local w="79"
    local char="-"
    printf "%${w}s\n" | sed "s/ /$char/g"
}

# adds a separator line to the log file.
function _separator {
    _line | tee -a "$LOGGER"
}

# checks if one of the lockers are seen.
function _seen {
    local trigger="$1"
    if [[ ! -f "$trigger" ]]; then
        return 1
    fi

    _logger "found $trigger"
    return 0
}

# removes a specified lock file and logs the action.
function _lock_remove {
    local file="$1"

    if [[ ! -f "$file" ]]; then
        return
    fi

    _logger "removing $file"
    rm -f "$file"
    sleep 0.5
}

# creates a specified file and logs the action.
function _lock_touch {
    local file="$1"
    touch "$file"
    _logger "creating $file"
    sleep 0.5
}

# checks if the automatic hibernate lock file exists.
function _is_ready_to_hibernate {
    if [[ ! -f "$HIBERNATE_LOCK" ]]; then
        return 1
    fi

    _logger "found $HIBERNATE_LOCK"
    return 0
}

# creates a wakeup lock file and triggers the hibernation process
# using sudo ZZZ.
function _suspend_hybrid {
    _logger "setting up to after wake-up"
    _lock_touch "$WAKEUP_LOCK"

    _logger "entering hibernate-mode...sudo ZZZ"
    _separator
    sudo ZZZ
}

function pre_exit {
    _lock_remove "$LOGGER"
}

for dep in "${DEPS[@]}"; do
    if ! command -v "$dep" &>/dev/null; then
        _logger "missing dependency: $dep"
        exit 1
    fi
done

_logger "started at $(date)"

trap pre_exit EXIT SIGTERM

while true; do
    if _seen "$HIBERNATE_LOCK"; then
        _lock_remove "$HIBERNATE_LOCK"
        _suspend_hybrid
    fi

    sleep "$SLEEP"
done
