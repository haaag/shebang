#!/usr/bin/env bash

# set apps for `xdg-open`

PROG="${0##*/}"
ROOT="${XDG_DATA_HOME:-}/applications"
VERBOSE=false
declare -A NOTSET

# colors
GREEN=$(tput setaf 2)
RED=$(tput setaf 1)
YELLOW=$(tput setaf 3)
GRAY=$(tput setaf 8)
CYAN=$(tput setaf 6)
RESET="$(tput sgr0)"

# table
COL1=30
COL2=20
COL3=30
COL4=15

declare -A DEFAULTS_APPS
# email client
DEFAULTS_APPS["message/rfc822"]="mailto.desktop"
DEFAULTS_APPS["x-scheme-handler/mailto"]="mailto.desktop"
# file explorer
DEFAULTS_APPS["inode/directory"]="file.desktop"
# images viewer
DEFAULTS_APPS["application/postscript"]="img.desktop"
DEFAULTS_APPS["image/avif"]="img.desktop"
DEFAULTS_APPS["image/bmp"]="img.desktop"
DEFAULTS_APPS["image/gif"]="img.desktop"
DEFAULTS_APPS["image/heic"]="img.desktop"
DEFAULTS_APPS["image/heif"]="img.desktop"
DEFAULTS_APPS["image/jp2"]="img.desktop"
DEFAULTS_APPS["image/jpeg"]="img.desktop"
DEFAULTS_APPS["image/jpg"]="img.desktop"
DEFAULTS_APPS["image/jxl"]="img.desktop"
DEFAULTS_APPS["image/png"]="img.desktop"
DEFAULTS_APPS["image/svg+xml"]="img.desktop"
DEFAULTS_APPS["image/tiff"]="img.desktop"
DEFAULTS_APPS["image/webp"]="img.desktop"
DEFAULTS_APPS["image/x-bmp"]="img.desktop"
DEFAULTS_APPS["image/x-portable-anymap"]="img.desktop"
DEFAULTS_APPS["image/x-portable-bitmap"]="img.desktop"
DEFAULTS_APPS["image/x-portable-graymap"]="img.desktop"
DEFAULTS_APPS["image/x-tga"]="img.desktop"
DEFAULTS_APPS["image/x-xpixmap"]="img.desktop"
# text editor
DEFAULTS_APPS["application/json"]="nvim.desktop"
DEFAULTS_APPS["application/x-ndjson"]="nvim.desktop"
DEFAULTS_APPS["application/x-shellscript"]="nvim.desktop"
DEFAULTS_APPS["text/csv"]="nvim.desktop"
DEFAULTS_APPS["text/english"]="nvim.desktop"
DEFAULTS_APPS["text/plain"]="nvim.desktop"
DEFAULTS_APPS["text/x-c"]="nvim.desktop"
DEFAULTS_APPS["text/x-c++"]="nvim.desktop"
DEFAULTS_APPS["text/x-c++hdr"]="nvim.desktop"
DEFAULTS_APPS["text/x-c++src"]="nvim.desktop"
DEFAULTS_APPS["text/x-chdr"]="nvim.desktop"
DEFAULTS_APPS["text/x-csrc"]="nvim.desktop"
DEFAULTS_APPS["text/x-java"]="nvim.desktop"
DEFAULTS_APPS["text/x-makefile"]="nvim.desktop"
DEFAULTS_APPS["text/x-moc"]="nvim.desktop"
DEFAULTS_APPS["text/x-pascal"]="nvim.desktop"
DEFAULTS_APPS["text/x-shellscript"]="nvim.desktop"
DEFAULTS_APPS["text/x-tcl"]="nvim.desktop"
DEFAULTS_APPS["text/x-tex"]="nvim.desktop"
# pdf reader
DEFAULTS_APPS["application/pdf"]="pdf.desktop"
# browser
DEFAULTS_APPS["application/rdf+xml"]="browser.desktop"
DEFAULTS_APPS["application/rss+xml"]="browser.desktop"
DEFAULTS_APPS["application/xhtml+xml"]="browser.desktop"
DEFAULTS_APPS["application/xhtml_xml"]="browser.desktop"
DEFAULTS_APPS["application/xml"]="browser.desktop"
DEFAULTS_APPS["text/html"]="browser.desktop"
DEFAULTS_APPS["x-scheme-handler/http"]="browser.desktop"
DEFAULTS_APPS["x-scheme-handler/https"]="browser.desktop"
DEFAULTS_APPS["x-scheme-handler/ipfs"]="browser.desktop"
DEFAULTS_APPS["x-scheme-handler/ipns"]="browser.desktop"
# video player
DEFAULTS_APPS["video/mp4"]="video.desktop"
DEFAULTS_APPS["video/mpeg"]="video.desktop"
DEFAULTS_APPS["video/quicktime"]="video.desktop"
DEFAULTS_APPS["video/webm"]="video.desktop"
DEFAULTS_APPS["video/x-flv"]="video.desktop"
DEFAULTS_APPS["video/x-ms-wmv"]="video.desktop"
DEFAULTS_APPS["video/x-msvideo"]="video.desktop"
# torrent
DEFAULTS_APPS["application/x-bittorrent"]="torrent.desktop"
DEFAULTS_APPS["x-scheme-handler/magnet"]="torrent.desktop"
# fonts
DEFAULTS_APPS["application/vnd.ms-opentype"]="fonts.desktop"
DEFAULTS_APPS["font/sfnt"]="fonts.desktop"
DEFAULTS_APPS["application/x-font-ttf"]="fonts.desktop"
DEFAULTS_APPS["application/x-font-otf"]="fonts.desktop"
DEFAULTS_APPS["application/font-woff"]="fonts.desktop"

function err_exit {
    printf "%s: %s\n" "$PROG" "$*" >&2
    exit 1
}

function logme {
    printf "%s: %s\n" "$PROG" "$*"
}

function pline {
    local sep_and_border=3
    local total_length=$((COL1 + COL2 + COL3 + COL4 + sep_and_border))

    local line=""
    for ((i = 0; i < "$total_length"; i++)); do
        line+="-"
    done

    printf "%s\n" "$line"
}

function print_row {
    if "$VERBOSE"; then
        printf "| %-${COL1}s | %-${COL2}s | %-${COL3}s | %-${COL4}s \n" "$1" "$2" "$3" "$4"
    fi
}

function print_header {
    if "$VERBOSE"; then
        print_row "MIME Type" "Desktop Entry" "Current" "Status"
        pline
    fi
}

function spinner {
    local mesg="$1"
    local i=0
    while true; do
        printf "."
        i=$((i + 1))
        if [[ $i -gt 3 ]]; then
            i=0
            printf "\r\033[K%s" "$mesg"
        fi
        sleep 0.4
    done &
}

function confirm {
    local question="$1"
    local answer
    echo -n "$question ${GRAY}[y/N]:${RESET} "
    read -r answer

    case "$answer" in
    y | Y) return 0 ;;
    n | N) return 1 ;;
    *) return 1 ;;
    esac
}

function is_set {
    local mime_type="$1"
    local desktop_entry current

    desktop_entry="${DEFAULTS_APPS[$mime_type]}"
    current=$(xdg-mime query default "$mime_type")

    if [[ "$desktop_entry" != "$current" ]]; then
        return 1
    fi

    return 0
}

function get_entry {
    xdg-mime query default "$1"
}

function query_entry {
    xdg-mime query filetype "$1"
}

function set_entry {
    local mime_type="$1"
    local entry="$2"
    local entry_path="${ROOT}/${entry}"
    if [[ ! -e "$entry_path" ]]; then
        print_row "$mime_type" "$entry" "$(get_entry "$key")" "${RED}NOTFOUND${RESET}"
        return
    fi

    # xdg-mime default mailto.desktop x-scheme-handler/mailto
    xdg-mime default "$entry" "$mime_type"
    retcode=$?
    if [[ "$retcode" -ne 0 ]]; then
        logme "err setting '$entry' to '$mime_type"
    else
        print_row "$mime_type" "$entry" "$(get_entry "$key")" "${GREEN}OK${RESET}"
    fi
}

function update_entries {
    print_header
    local key
    for key in "${!NOTSET[@]}"; do
        set_entry "$key" "${NOTSET[$key]}"
    done
}

function handle_notset {
    local key
    if ! "$VERBOSE"; then
        VERBOSE=true
        print_header
    fi
    for key in "${!NOTSET[@]}"; do
        print_row "$key" "${NOTSET[$key]}" "$(get_entry "$key")" "${YELLOW}UNSET${RESET}"
    done

    echo
    if confirm "> ${CYAN}found ${#NOTSET[@]} entries unset, continue?${RESET}"; then
        echo
        update_entries
    fi
}

function check_entries {
    if ! "$VERBOSE"; then
        local n="${#DEFAULTS_APPS[@]}"
        local mesg="checking $n MIME types entries"
        trap 'kill $! 2>/dev/null; echo; exit' SIGINT
        printf "%s" "$mesg"
        spinner "$mesg"
    fi

    print_header
    local mime_type entry current
    for mime_type in "${!DEFAULTS_APPS[@]}"; do
        entry="${DEFAULTS_APPS[$mime_type]}"
        current="$(get_entry "$mime_type")"

        if is_set "$mime_type"; then
            print_row "$mime_type" "$entry" "$current" "${GREEN}OK${RESET}"
        else
            NOTSET["$mime_type"]="$entry"
        fi
    done

    if ! "$VERBOSE"; then
        kill $! 2>/dev/null
        printf "\r\033[K"
    fi

    if [[ "${#NOTSET[@]}" -gt 0 ]]; then
        handle_notset
        return
    fi

    logme "all ${#DEFAULTS_APPS[@]} entries setted"
}

function usage {
    cat <<-_EOF
Usage: $PROG [-v] <COMMAND>

    Set defaults MIME Types and desktop files (xdg-mime)

Command:
    -g <MIME-type>  Query default desktop entry
    -e <file>       Query filetype mime-type
    -c              Show current state
    -v              Verbose output
_EOF
}

function main {
    if [[ "$#" -le 0 ]]; then
        usage && exit 1
    fi

    if ! command -v xdg-mime >/dev/null; then
        err_exit "xdg-mime not found"
    fi

    while getopts "ce:g:uv" flag; do
        case ${flag} in
        v) VERBOSE=true ;;
        c) check_entries ;;
        e) shift && query_entry "$1" ;;
        g) shift && get_entry "$1" ;;
        u) update_entries ;;
        *) usage && exit 1 ;;
        esac
    done
}

main "$@"
