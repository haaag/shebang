#!/bin/env bash

# simple bash script for suckless system prompt.

PROG=$(basename "$0")
DEPS=(dmenu dwm slock)
OPTS=(" lock" "⏾ suspend" " hibernate" " logout")
OPTS+=(" reboot" " poweroff" " restartwm" " displayoff")
XDG_CURRENT_DESKTOP=${XDG_CURRENT_DESKTOP:-dwm}

function _logerr {
    notify-send "$PROG" "$*"
    printf "%s: %s\n" "$PROG" "$*" >&2
    exit 1
}

function _logme {
    printf "%s: %s\n" "$PROG" "$*"
}

function main {
    local uptime chosen

    for cmd in "${DEPS[@]}"; do
        if ! command -v "$cmd" >/dev/null; then
            _logerr "'$cmd' command not found."
        fi
    done

    uptime=$(uptime -p | sed -e 's/up //g')
    chosen=$(printf "%s\n" "${OPTS[@]}" | dmenu -i -p " $(hostname): $uptime")

    case "$chosen" in
    *lock)
        _logme "locking screen with slock"
        slock
        ;;
    *suspend)
        _logme "suspending system with zzz"
        sudo zzz
        ;;
    *hibernate)
        _logme "hibernating system with ZZZ"
        suspend-hybrid manual
        ;;
    *logout)
        _logme "logging out"
        pkill -x Xorg
        ;;
    *restartwm)
        _logme "restarting dwm"
        pkill -x "$XDG_CURRENT_DESKTOP"
        ;;
    *reboot)
        _logme "rebooting system"
        sudo -A reboot
        ;;
    *poweroff)
        _logme "powering off system"
        sudo -A poweroff
        ;;
    *displayoff)
        _logme "powering off display"
        xset dpms force off
        ;;
    *) exit ;;
    esac
}

main
