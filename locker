#!/usr/bin/env bash

# ╻  ┏━┓┏━╸╻┏ ┏━╸┏━┓
# ┃  ┃ ┃┃  ┣┻┓┣╸ ┣┳┛
# ┗━╸┗━┛┗━╸╹ ╹┗━╸╹┗╸
# simple locker with xautolock and zzz

set -o errexit
set -o pipefail
set -o nounset

PROG="${0##*/}"
SUSPEND_TIME=30
LOCKER="sudo zzz"
CMD="xautolock"
DEPS=(zzz setsid "$CMD")

function _logerr {
    printf "%s: %s\n" "$PROG" "$*" >&2
    exit 1
}

function _notifyme {
    local prog
    local icon="system-lock-screen-symbolic"
    local mesg="<b>$1</b>"
    prog=$(echo "$PROG" | tr '[:lower:]' '[:upper:]')
    notify-send -i "$icon" "$prog" "$mesg"
}

function _is_running {
    if ! pgrep -x "$CMD" >/dev/null; then
        return 1
    fi
    return 0
}

function _kill_locker {
    pkill -x "$CMD"
}

function _usage {
    cat <<-END
Usage: $PROG <timer in minutes> (default: 30m | max: 1 <= mins <= 60)

    Simple timer locker with xautolock and zzz
END
}

function _has {
    local c
    local verbose=false
    if [[ $1 == '-v' ]]; then
        verbose=true
        shift
    fi
    for c in "$@"; do
        c="${c%% *}"
        if ! command -v "$c" &>/dev/null; then
            [[ "$verbose" == true ]] && _logerr "'$c' not found"
            return 1
        fi
    done
}

function main {
    local timer
    timer="${1:-}"

    _has -v "${DEPS[@]}"

    if [[ "${1-}" =~ ^-*h(elp)?$ ]]; then
        _usage
        exit
    fi

    if _is_running; then
        _kill_locker
    fi

    [[ -n "$timer" ]] && SUSPEND_TIME=$timer
    setsid -f "$CMD" -time "$SUSPEND_TIME" -locker "$LOCKER" -detectsleep
    _notifyme "<i>Setting locker to</i> ${SUSPEND_TIME}m"
}

main "$@"
